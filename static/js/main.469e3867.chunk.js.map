{"version":3,"sources":["photo.jpg","dumb-components/header-mediaArt/mediaart.js","dumb-components/header-nowPlaying/nowplaying.js","containers/header/header.js","dumb-components/playlist-songView/songview.js","containers/playlist/songlist.js","containers/playlist/playlist.js","containers/contentdisplay/contentdisplay.js","dumb-components/main-sidebar/sidebar.js","containers/main/main.js","dumb-components/footer-mediaArt/mediaart.js","dumb-components/footer-navigation/navigation.js","containers/footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MediaArt","react_default","a","createElement","className","src","photo","alt","NowPlaying","Header","header_mediaArt_mediaart","header_nowPlaying_nowplaying","SongView","_ref","playlist","id","songname","author","duration","type","songlist","Playlist","map","e","playlist_songView_songview","key","ContentDisplay","header_header","containers_playlist_playlist","Sidebar","Main","main_sidebar_sidebar","contentdisplay_contentdisplay","FooterNav","Footer","dumb_components_footer_mediaArt_mediaart","footer_navigation_navigation","App","main_main","footer_footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.469e3867.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/photo.381d2901.jpg\";","import React from 'react';\nimport './mediaart.css'\nimport photo from '../../photo.jpg'\nconst MediaArt = ()=>{\n    return(\n        <div className='media-art'>\n            <img src={photo} alt='now loading..'  />\n        </div>\n    )\n}\n\nexport default MediaArt","import React from \"react\";\nimport \"./nowplaying.css\";\nconst NowPlaying = () => {\n  return (\n    <div className='nowplaying-container'>\n      <div className=\"nowplaying\">\n        <h1>CattyBoard Top 100 Single Charts (11.06.36)</h1>\n        <p> Unknown Artist</p>\n        <p>2016 charts 100 songs</p>\n      </div>\n\n      <div className='sm-nav'>\n          <div className='bg-color-change'>\n            \n            <p> <i className=\"fas fa-play\"></i> Play all</p>\n          </div>\n\n          <div className='bg-color-change'>\n            \n            <p> <i className=\"fas fa-plus\"></i> Add to</p>\n          </div>\n\n          <div className='bg-color-change'>\n            \n            <p> <i className=\"fas fa-ellipsis-h\"></i> More</p>\n          </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NowPlaying;\n","import React from 'react';\nimport './header.css';\nimport MediaArt from '../../dumb-components/header-mediaArt/mediaart'\nimport NowPlaying from '../../dumb-components/header-nowPlaying/nowplaying'\n\nconst Header=()=>{\n    return(\n        <div className='header'>\n            <MediaArt/>\n            <NowPlaying/>\n\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './songview.css'\n\nconst SongView =({playlist})=>{\n    return(\n        <div className={ playlist.id%2===0 ? 'grey playlist-container' : 'white playlist-container' } >\n            <div className='setting-equal-width'>\n             {playlist.id}.{playlist.songname}\n            </div>\n\n            <div className='setting-equal-width'>\n            {playlist.author}\n            </div>\n            \n            <div className='setting-equal-width'>\n             {playlist.duration}   \n            </div>\n\n            <div className='ps-type'>\n                {playlist.type}\n            </div>\n\n            \n            \n        </div>\n    )\n}\n\nexport default SongView","export default [\n    {\n      id: 1,\n      songname: \"One Dance\",\n      author: \"Crake feat CatKid & Cyla\",\n      duration: \"2:54\",\n      type: \"CATTY CLOUD SYNC\"\n    },\n    {\n      id: 2,\n      songname: \"Panda\",\n      author: \"Cattee\",\n      duration: \"4:06\",\n      type: \"CATTY CLOUD SYNC\"\n    },\n    {\n      id: 3,\n      songname: \"Can't Stop the Feeling!\",\n      author: \"Catin Cimberlake\",\n      duration: \"3:56\",\n      type: \"CATTY CLOUD SYNC\"\n    },\n    {\n      id: 4,\n      songname: \"Work From Home\",\n      author: \" Cat Harmony feat Colla\",\n      duration: \"3:34\",\n      type: \"CATTY CLOUD SYNC\"\n    }\n  ];","import React from \"react\";\nimport \"./playlist.css\";\nimport SongView from \"../../dumb-components/playlist-songView/songview\";\nimport songlist from './songlist'\nconst Playlist = () => {\n  \n  return (\n    <div className=\"playlist\">\n      {songlist.map(e=><SongView key={e.id} playlist={e} />)}\n      \n    </div>\n  );\n};\n\nexport default Playlist;\n","import React from 'react';\nimport './contentdisplay.css';\nimport Header from '../header/header'\nimport Playlist from '../playlist/playlist'\n\nconst ContentDisplay=()=>{\n    return(\n        <div className='contentdisp'>\n            <Header/>\n            <Playlist/>\n\n        </div>\n    )\n}\n\nexport default ContentDisplay;","import React from 'react';\nimport './sidebar.css';\n\nconst Sidebar=()=>{\n    return(\n        <div className='sidebar'>\n          <i className=\"fas fa-bars\"></i>\n          <i className=\"fas fa-home\"></i>\n          <i className=\"fas fa-search\"></i>\n          <i className=\"fas fa-volume-up\"></i>\n          <i className=\"fas fa-user\"></i>\n          <i className=\"fab fa-spotify\"></i>\n          <i className=\"fas fa-cog\"></i>\n          <i className=\"fab fa-soundcloud\"></i>\n        </div>\n    )\n}\n\nexport default Sidebar;","import React from 'react';\nimport './main.css';\nimport ContentDisplay from '../contentdisplay/contentdisplay'\nimport Sidebar from '../../dumb-components/main-sidebar/sidebar'\nconst Main=()=>{\n    return(\n        <div className='main'>\n            <Sidebar/>\n            <ContentDisplay/>\n        </div>\n    ) \n} \n\nexport default Main;","import React from 'react'\nimport './mediaart.css'\nimport photo from '../../photo.jpg'\nconst MediaArt = ()=>{\n    return(\n        <div className='media-art-container'>\n            <div className='left-container'>\n                <div className='img-container'>\n                    <img className='img' src={photo} alt='loading .. '/>\n                </div>\n\n                <div className='track-info-container'>\n                    <p className='first-p'>\n                        If It Ain't Love\n                    </p>\n\n                    <p>\n                        Catson Derulo\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MediaArt","import React from 'react'\nimport './navigation.css'\nconst FooterNav = ()=>{\n    return(\n        <div className='footer-nav'>\n            \n            <i className=\"fas fa-backward\"></i>\n            <i className=\"fas fa-pause\"></i>\n            <i className=\"fas fa-forward\"></i>\n            <i className=\"fas fa-redo\"></i>\n            <i className=\"fas fa-random\"></i>\n            \n            \n           \n            \n        </div>\n    )\n}\n\nexport default FooterNav","import React from 'react';\nimport './footer.css';\nimport MediaArt from '../../dumb-components/footer-mediaArt/mediaart'\nimport FooterNav from '../../dumb-components/footer-navigation/navigation'\nconst Footer=()=>{\n    return(\n        <div className='footer'>\n            <MediaArt/>\n            <FooterNav/>\n\n        </div>\n    )\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport Main from './containers/main/main';\nimport Footer from './containers/footer/footer'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='app-container'>\n          <Main/>\n          <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}